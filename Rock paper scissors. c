
Sign In
Home
Saved Videos
Courses
Practice DS & Algo.
Algorithms
Analysis of Algorithms
Data Structures
Interview Corner
Languages
CS Subjects
GATE
Web Technologies
Software Designs
School Learning
Mathematics
Maths Notes (Class 8-11)
NCERT Solutions
RD Sharma Solutions
ISRO CS
UGC NET CS
Student
Jobs
GBlog
Puzzles
What's New ?
 Change Language
Related Articles
â–²
Related Articles
Strings in C
Arrow operator -> in C/C++ with Examples
UDP Server-Client implementation in C
Generating random number in a range in C
C program to sort an array in ascending order
Basics of File Handling in C
Program to print ASCII Value of a character
How to return multiple values from a function in C or C++?
How to Append a Character to a String in C
Header files in C/C++ and its uses
Program to find Prime Numbers Between given Interval
C Program to Swap two Numbers
C program to Find the Largest Number Among Three Numbers
C Program to Check Whether a Number is Prime or not
C++ Program to check Prime Number
time() function in C
getch() function in C with Examples
unsigned char in C with Examples
Measure execution time with high precision in C/C++
Flex (Fast Lexical Analyzer Generator )
C program to Replace a word in a text by another given word
Create Directory or Folder with C/C++ Program
C Program for Bubble Sort on Linked List
C program to find square root of a given number
Set, Clear and Toggle a given bit of a number in C
C / C++ Program for Dijkstra's shortest path algorithm | Greedy Algo-7
Check whether the given character is in upper case, lower case or non alphabetic character
getopt() function in C to parse command line arguments
Program to calculate First and Follow sets of given grammar
Create n-child process from same parent process using fork() in C

Rock Paper Scissor in C
Difficulty Level : Medium
Last Updated : 15 Jun, 2021
Geek Week
Rock Paper Scissor (which is also called Stone Paper Scissor) is a hand game and played between two people, in which each player simultaneously forms one of three shapes. The winner of the game is decided as per the below rules:

Rock vs Paper -> Paper wins.
Rock vs Scissor -> Rock wins.
Paper vs Scissor -> Scissor wins.
In this game, the user will be asked to make choice and according to the choice of user and computer and then the result will be displayed along with the choices of both computer and user.

Approach: Below is the functionality that needed to be implemented in the program:

main() function: 

It consists of the declaration of the variables.
printf()
and
scanf()
functions for displaying the content and taking input from the user. It also contains  two predefined functions:
srand() and rand()
which are used to generate random numbers in the range [0, RAND_MAX) and srand() especially will help to generate a random number at each time.
Take modulo of random number generated with 100 to make its range between (0 and 100).
As the range is up to 100 only, the distribution among all the options i.e., stone, paper, and scissors is equal as all of them have an equal probability of coming.
Note: This random number will decide the choice of computer as:



If the number is between 0-33 then the choice will be Stone.
If the number is between 33-66 then the choice will be Paper.
If the number is between 66-100 then the choice will be Scissors.
game() function: This function consists of if-else statements that will compare the choice of user and computer. If the user wins then it will return 1. Otherwise, if the computer wins then it will return 0. If it is a tie, it will return -1.

Below is the implementation of the above approach:

C
// C program for the above approach
#include <math.h>
#include <stdio.h>
#include <stdlib.h>
#include <time.h>
 
// Function to implement the game
int game(char you, char computer)
{
    // If both the user and computer
    // has chose the same thing
    if (you == computer)
        return -1;
 
    // If user's choice is stone and
    // computer's choice is paper
    if (you == 's' && computer == 'p')
        return 0;
 
            // If user's choice is paper and
            // computer's choice is stone
            else if (you == 'p' && computer == 's') return 1;
 
    // If user's choice is stone and
    // computer's choice is scissor
    if (you == 's' && computer == 'z')
        return 1;
 
    // If user's choice is scissor and
    // computer's choice is stone
    else if (you == 'z' && computer == 's')
        return 0;
 
    // If user's choice is paper and
    // computer's choice is scissor
    if (you == 'p' && computer == 'z')
        return 0;
 
    // If user's choice is scissor and
    // computer's choice is paper
    else if (you == 'z' && computer == 'p')
        return 1;
}
 
// Driver Code
int main()
{
    // Stores the random number
    int n;
 
    char you, computer, result;
 
    // Chooses the random number
    // every time
    srand(time(NULL));
 
    // Make the random number less
    // than 100, divided it by 100
    n = rand() % 100;
 
    // Using simple probability 100 is
    // roughly divided among stone,
    // paper, and scissor
    if (n < 33)
 
        // s is denoting Stone
        computer = 's';
 
    else if (n > 33 && n < 66)
 
        // p is denoting Paper
        computer = 'p';
 
    // z is denoting Scissor
    else
        computer = 'z';
 
    printf("\n\n\n\n\t\t\t\tEnter s for STONE, p for PAPER and z for SCISSOR\n\t\t\t\t\t\t\t");
 
    // input from the user
    scanf("%c", &you);
 
    // Function Call to play the game
    result = game(you, computer);
 
    if (result == -1) {
        printf("\n\n\t\t\t\tGame Draw!\n");
    }
    else if (result == 1) {
        printf("\n\n\t\t\t\tWow! You have won the game!\n");
    }
    else {
        printf("\n\n\t\t\t\tOh! You have lost the game!\n");
    }
        printf("\t\t\t\tYOu choose : %c and Computer choose : %c\n",you, computer);
 
    return 0;
}
